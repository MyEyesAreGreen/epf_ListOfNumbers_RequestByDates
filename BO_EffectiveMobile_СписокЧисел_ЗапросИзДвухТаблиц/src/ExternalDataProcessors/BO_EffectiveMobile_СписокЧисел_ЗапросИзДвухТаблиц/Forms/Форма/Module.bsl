 #Область ОбработчикиСобытийФормы
 
 &НаСервере
 Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
 	
	 Запрос = Новый Запрос;
	 Запрос.Текст =     
	 "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	Платформы.Название КАК Название,
	 |	МАКСИМУМ(ОтветственныеЛица.ДатаПриема) КАК ДатаПриема
	 |ПОМЕСТИТЬ Платформа_ДатаПриема
	 |ИЗ
	 |	РегистрСведений.Платформы КАК Платформы
	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица КАК ОтветственныеЛица
	 |		ПО (Платформы.ДатаРелиза >= ОтветственныеЛица.ДатаПриема)
	 |
	 |СГРУППИРОВАТЬ ПО
	 |	Платформы.Название
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	Платформа_ДатаПриема.Название КАК Название,
	 |	ОтветственныеЛица.ФИО КАК ФИО
	 |ИЗ
	 |	Платформа_ДатаПриема КАК Платформа_ДатаПриема
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица КАК ОтветственныеЛица
	 |		ПО (Платформа_ДатаПриема.ДатаПриема = ОтветственныеЛица.ДатаПриема)
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |	Название";   
	 ОтветственныеПлатформа.Загрузить(Запрос.Выполнить().Выгрузить());
	 
 КонецПроцедуры
 
 &НаКлиенте
 Процедура ПриОткрытии(Отказ)
	 КоличествоЧисел = 8;
 КонецПроцедуры
 
#КонецОбласти 

#Область ОбработчикиКомандФормы
&НаКлиенте
 Процедура ЗаполнитьСписок(Команда)  
 	
	 ЗаполнитьСписокНаСервере(); 
	 
 КонецПроцедуры
 
 &НаКлиенте
 Процедура УдалитьЛишнее(Команда)  
 	
	 ОчиститьСообщения();
	 Сообщение = УдалитьЛишнееНаСервере();
	 ПоказатьОповещениеПользователя(НСтр("ru = 'Результат:'"), , Сообщение, 
	 								БиблиотекаКартинок.УстановитьФлажки, СтатусОповещенияПользователя.Важное);   
	 
 КонецПроцедуры
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

 &НаСервере
 Процедура ЗаполнитьСписокНаСервере()  
 	
	 СписокЧисел.Очистить(); 
	 Минимум = pow(КоличествоЧисел, 2);
	 Максимум = -Минимум;
	 
	 ГСЧ = Новый ГенераторСлучайныхЧисел(); 
	 Для Счетчик = 1 По КоличествоЧисел Цикл  
		 НвСтепени = pow(КоличествоЧисел,2);
		 СлучайноеЧисло = -НвСтепени + ГСЧ.СлучайноеЧисло(0, 2 * НвСтепени);  
		 СписокЧисел.Добавить(СлучайноеЧисло);
		 Если Минимум > СлучайноеЧисло Тогда Минимум = СлучайноеЧисло КонецЕсли;   
		 Если Максимум < СлучайноеЧисло Тогда Максимум = СлучайноеЧисло КонецЕсли; 
	 КонецЦикла;   
	 
	 УстановитьУсловноеОформлениеНаСервере();
	   
 КонецПроцедуры
 
 &НаСервере
 Функция УдалитьЛишнееНаСервере()   
	 СписокОтриц = Новый СписокЗначений;  
	 Минимум = pow(КоличествоЧисел, 2);	
	 //Сообщение = Новый СообщениеПользователю();
	 Сообщение = "";
	 
	 Для Индекс = -СписокЧисел.Количество()+1 По 0 Цикл 
		 числоСписка = СписокЧисел[-Индекс].Значение;
		 Если числоСписка <= 0 Тогда
			 СписокОтриц.Добавить(числоСписка);   
			 СписокЧисел.Удалить(СписокЧисел[-Индекс]);
		 Иначе
			 Если Минимум > числоСписка Тогда Минимум = числоСписка КонецЕсли;   
		 КонецЕсли;        
	 КонецЦикла;
	 
	 Если СписокОтриц.Количество() > 0 Тогда
		 СписокОтриц.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
		 Сообщение = "Удалено значений: " + СписокОтриц.Количество() + " (" + СписокОтриц + ").";    
	 Иначе    
		  Сообщение = "Удалённых значений нет.";
	 КонецЕсли;	

	 УстановитьЦветФона(WebЦвета.Красный, Минимум); 
	 
     //Сообщение.Поле = СписокЧисел[0].Значение;
     //Сообщение.УстановитьДанные(ЭтотОбъект);
	 //Сообщение.Сообщить();
	 Возврат Сообщение;
 КонецФункции
 
 &НаСервере
 Процедура УстановитьУсловноеОформлениеНаСервере()	
 	
	 УсловноеОформление.Элементы.Очистить();   
	 УстановитьЦветФона(WebЦвета.Красный, Минимум);
	 УстановитьЦветФона(WebЦвета.Зеленый, Максимум); 	
	 
 КонецПроцедуры
 
 &НаСервере
 Процедура УстановитьЦветФона(Цвет, Значение)    
 	
	 ЭлементУО = УсловноеОформление.Элементы.Добавить();
	 ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", Цвет); 
	 ЭлементУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	 ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокЧисел.Значение");
	 ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	 ЭлементУсловия.ПравоеЗначение = Значение;
	 ЭлементУсловия.Использование = Истина;	
	 ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
	 ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("СписокЧиселЗначение"); 	
	 
 КонецПроцедуры
 
#КонецОбласти 
 
